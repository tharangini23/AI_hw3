
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'AC1D89989B3F1B9CDD613DAEF03B7DB2'
    
_lr_action_items = {'AND':([1,3,5,10,14,15,16,17,18,19,20,21,22,23,24,],[-9,6,11,6,6,6,6,6,-7,6,6,6,-5,-6,-4,]),'IMPLIES':([1,3,5,10,14,15,16,17,18,19,20,21,22,23,24,],[-9,7,12,7,7,7,7,7,-7,7,7,7,-5,-6,-4,]),'NAME':([0,2,4,6,7,8,9,11,12,13,],[1,1,1,1,1,1,1,1,1,1,]),'CB':([1,10,14,15,16,17,18,19,20,21,22,23,24,],[-9,18,-1,-3,-8,-2,-7,22,23,24,-5,-6,-4,]),'OB':([0,1,2,4,6,7,8,9,11,12,13,],[2,4,2,2,2,2,2,2,2,2,2,]),'COMMA':([1,3,5,10,14,15,16,17,18,19,20,21,22,23,24,],[-9,8,8,8,8,8,8,8,-7,8,8,8,-5,-6,-4,]),'OR':([1,3,5,10,14,15,16,17,18,19,20,21,22,23,24,],[-9,9,13,9,9,9,9,9,-7,9,9,9,-5,-6,-4,]),'$end':([1,3,14,15,16,17,18,22,23,24,],[-9,0,-1,-3,-8,-2,-7,-5,-6,-4,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,4,6,7,8,9,11,12,13,],[3,5,10,14,15,16,17,19,20,21,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression AND expression','expression',3,'p_expression','parse.py',25),
  ('expression -> expression OR expression','expression',3,'p_expression','parse.py',26),
  ('expression -> expression IMPLIES expression','expression',3,'p_expression','parse.py',27),
  ('expression -> OB expression OR expression CB','expression',5,'p_expression','parse.py',28),
  ('expression -> OB expression AND expression CB','expression',5,'p_expression','parse.py',29),
  ('expression -> OB expression IMPLIES expression CB','expression',5,'p_expression','parse.py',30),
  ('expression -> NAME OB expression CB','expression',4,'p_predicate','parse.py',38),
  ('expression -> expression COMMA expression','expression',3,'p_arguments','parse.py',44),
  ('expression -> NAME','expression',1,'p_arguments','parse.py',45),
]
