Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> OB expression OR expression CB
Rule 2     expression -> OB expression AND expression CB
Rule 3     expression -> OB expression IMPLIES expression CB
Rule 4     expression -> OB NOT expression CB
Rule 5     expression -> NAME OB expression CB
Rule 6     expression -> expression COMMA expression
Rule 7     expression -> NAME

Terminals, with rules where they appear

AND                  : 2
CB                   : 1 2 3 4 5
COMMA                : 6
IMPLIES              : 3
NAME                 : 5 7
NOT                  : 4
OB                   : 1 2 3 4 5
OR                   : 1
error                : 

Nonterminals, with rules where they appear

expression           : 1 1 2 2 3 3 4 5 6 6 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . OB expression OR expression CB
    (2) expression -> . OB expression AND expression CB
    (3) expression -> . OB expression IMPLIES expression CB
    (4) expression -> . OB NOT expression CB
    (5) expression -> . NAME OB expression CB
    (6) expression -> . expression COMMA expression
    (7) expression -> . NAME

    OB              shift and go to state 2
    NAME            shift and go to state 1

    expression                     shift and go to state 3

state 1

    (5) expression -> NAME . OB expression CB
    (7) expression -> NAME .

    OB              shift and go to state 4
    CB              reduce using rule 7 (expression -> NAME .)
    COMMA           reduce using rule 7 (expression -> NAME .)
    OR              reduce using rule 7 (expression -> NAME .)
    AND             reduce using rule 7 (expression -> NAME .)
    IMPLIES         reduce using rule 7 (expression -> NAME .)
    $end            reduce using rule 7 (expression -> NAME .)


state 2

    (1) expression -> OB . expression OR expression CB
    (2) expression -> OB . expression AND expression CB
    (3) expression -> OB . expression IMPLIES expression CB
    (4) expression -> OB . NOT expression CB
    (1) expression -> . OB expression OR expression CB
    (2) expression -> . OB expression AND expression CB
    (3) expression -> . OB expression IMPLIES expression CB
    (4) expression -> . OB NOT expression CB
    (5) expression -> . NAME OB expression CB
    (6) expression -> . expression COMMA expression
    (7) expression -> . NAME

    NOT             shift and go to state 5
    OB              shift and go to state 2
    NAME            shift and go to state 1

    expression                     shift and go to state 6

state 3

    (0) S' -> expression .
    (6) expression -> expression . COMMA expression

    COMMA           shift and go to state 7


state 4

    (5) expression -> NAME OB . expression CB
    (1) expression -> . OB expression OR expression CB
    (2) expression -> . OB expression AND expression CB
    (3) expression -> . OB expression IMPLIES expression CB
    (4) expression -> . OB NOT expression CB
    (5) expression -> . NAME OB expression CB
    (6) expression -> . expression COMMA expression
    (7) expression -> . NAME

    OB              shift and go to state 2
    NAME            shift and go to state 1

    expression                     shift and go to state 8

state 5

    (4) expression -> OB NOT . expression CB
    (1) expression -> . OB expression OR expression CB
    (2) expression -> . OB expression AND expression CB
    (3) expression -> . OB expression IMPLIES expression CB
    (4) expression -> . OB NOT expression CB
    (5) expression -> . NAME OB expression CB
    (6) expression -> . expression COMMA expression
    (7) expression -> . NAME

    OB              shift and go to state 2
    NAME            shift and go to state 1

    expression                     shift and go to state 9

state 6

    (1) expression -> OB expression . OR expression CB
    (2) expression -> OB expression . AND expression CB
    (3) expression -> OB expression . IMPLIES expression CB
    (6) expression -> expression . COMMA expression

    OR              shift and go to state 12
    AND             shift and go to state 10
    IMPLIES         shift and go to state 11
    COMMA           shift and go to state 7


state 7

    (6) expression -> expression COMMA . expression
    (1) expression -> . OB expression OR expression CB
    (2) expression -> . OB expression AND expression CB
    (3) expression -> . OB expression IMPLIES expression CB
    (4) expression -> . OB NOT expression CB
    (5) expression -> . NAME OB expression CB
    (6) expression -> . expression COMMA expression
    (7) expression -> . NAME

    OB              shift and go to state 2
    NAME            shift and go to state 1

    expression                     shift and go to state 13

state 8

    (5) expression -> NAME OB expression . CB
    (6) expression -> expression . COMMA expression

    CB              shift and go to state 14
    COMMA           shift and go to state 7


state 9

    (4) expression -> OB NOT expression . CB
    (6) expression -> expression . COMMA expression

    CB              shift and go to state 15
    COMMA           shift and go to state 7


state 10

    (2) expression -> OB expression AND . expression CB
    (1) expression -> . OB expression OR expression CB
    (2) expression -> . OB expression AND expression CB
    (3) expression -> . OB expression IMPLIES expression CB
    (4) expression -> . OB NOT expression CB
    (5) expression -> . NAME OB expression CB
    (6) expression -> . expression COMMA expression
    (7) expression -> . NAME

    OB              shift and go to state 2
    NAME            shift and go to state 1

    expression                     shift and go to state 16

state 11

    (3) expression -> OB expression IMPLIES . expression CB
    (1) expression -> . OB expression OR expression CB
    (2) expression -> . OB expression AND expression CB
    (3) expression -> . OB expression IMPLIES expression CB
    (4) expression -> . OB NOT expression CB
    (5) expression -> . NAME OB expression CB
    (6) expression -> . expression COMMA expression
    (7) expression -> . NAME

    OB              shift and go to state 2
    NAME            shift and go to state 1

    expression                     shift and go to state 17

state 12

    (1) expression -> OB expression OR . expression CB
    (1) expression -> . OB expression OR expression CB
    (2) expression -> . OB expression AND expression CB
    (3) expression -> . OB expression IMPLIES expression CB
    (4) expression -> . OB NOT expression CB
    (5) expression -> . NAME OB expression CB
    (6) expression -> . expression COMMA expression
    (7) expression -> . NAME

    OB              shift and go to state 2
    NAME            shift and go to state 1

    expression                     shift and go to state 18

state 13

    (6) expression -> expression COMMA expression .
    (6) expression -> expression . COMMA expression

  ! shift/reduce conflict for COMMA resolved as shift
    CB              reduce using rule 6 (expression -> expression COMMA expression .)
    OR              reduce using rule 6 (expression -> expression COMMA expression .)
    AND             reduce using rule 6 (expression -> expression COMMA expression .)
    IMPLIES         reduce using rule 6 (expression -> expression COMMA expression .)
    $end            reduce using rule 6 (expression -> expression COMMA expression .)
    COMMA           shift and go to state 7

  ! COMMA           [ reduce using rule 6 (expression -> expression COMMA expression .) ]


state 14

    (5) expression -> NAME OB expression CB .

    CB              reduce using rule 5 (expression -> NAME OB expression CB .)
    COMMA           reduce using rule 5 (expression -> NAME OB expression CB .)
    OR              reduce using rule 5 (expression -> NAME OB expression CB .)
    AND             reduce using rule 5 (expression -> NAME OB expression CB .)
    IMPLIES         reduce using rule 5 (expression -> NAME OB expression CB .)
    $end            reduce using rule 5 (expression -> NAME OB expression CB .)


state 15

    (4) expression -> OB NOT expression CB .

    CB              reduce using rule 4 (expression -> OB NOT expression CB .)
    COMMA           reduce using rule 4 (expression -> OB NOT expression CB .)
    OR              reduce using rule 4 (expression -> OB NOT expression CB .)
    AND             reduce using rule 4 (expression -> OB NOT expression CB .)
    IMPLIES         reduce using rule 4 (expression -> OB NOT expression CB .)
    $end            reduce using rule 4 (expression -> OB NOT expression CB .)


state 16

    (2) expression -> OB expression AND expression . CB
    (6) expression -> expression . COMMA expression

    CB              shift and go to state 19
    COMMA           shift and go to state 7


state 17

    (3) expression -> OB expression IMPLIES expression . CB
    (6) expression -> expression . COMMA expression

    CB              shift and go to state 20
    COMMA           shift and go to state 7


state 18

    (1) expression -> OB expression OR expression . CB
    (6) expression -> expression . COMMA expression

    CB              shift and go to state 21
    COMMA           shift and go to state 7


state 19

    (2) expression -> OB expression AND expression CB .

    CB              reduce using rule 2 (expression -> OB expression AND expression CB .)
    COMMA           reduce using rule 2 (expression -> OB expression AND expression CB .)
    OR              reduce using rule 2 (expression -> OB expression AND expression CB .)
    AND             reduce using rule 2 (expression -> OB expression AND expression CB .)
    IMPLIES         reduce using rule 2 (expression -> OB expression AND expression CB .)
    $end            reduce using rule 2 (expression -> OB expression AND expression CB .)


state 20

    (3) expression -> OB expression IMPLIES expression CB .

    CB              reduce using rule 3 (expression -> OB expression IMPLIES expression CB .)
    COMMA           reduce using rule 3 (expression -> OB expression IMPLIES expression CB .)
    OR              reduce using rule 3 (expression -> OB expression IMPLIES expression CB .)
    AND             reduce using rule 3 (expression -> OB expression IMPLIES expression CB .)
    IMPLIES         reduce using rule 3 (expression -> OB expression IMPLIES expression CB .)
    $end            reduce using rule 3 (expression -> OB expression IMPLIES expression CB .)


state 21

    (1) expression -> OB expression OR expression CB .

    CB              reduce using rule 1 (expression -> OB expression OR expression CB .)
    COMMA           reduce using rule 1 (expression -> OB expression OR expression CB .)
    OR              reduce using rule 1 (expression -> OB expression OR expression CB .)
    AND             reduce using rule 1 (expression -> OB expression OR expression CB .)
    IMPLIES         reduce using rule 1 (expression -> OB expression OR expression CB .)
    $end            reduce using rule 1 (expression -> OB expression OR expression CB .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 13 resolved as shift
